admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: {
      address: 0.0.0.0,
      port_value: 9902
    }

static_resources:
  listeners:
  - name: access_listener
    address:
      socket_address: {
        address: 0.0.0.0,
        port_value: 8989
      }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        # TODO: deprecated option 'envoy.api.v2.listener.Filter.config' change to 'typed_config'
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_access_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: access_cluster
                  max_grpc_timeout: 0s
              cors:
                allow_origin_string_match:
                  - safe_regex:
                      google_re2: {}
                      regex: \*
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router
  - name: dictionary_listener
    address:
      socket_address: {
        address: 0.0.0.0,
        port_value: 8990
      }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        # TODO: deprecated option 'envoy.api.v2.listener.Filter.config' change to 'typed_config'
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_dictionary_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: dictionary_cluster
                  max_grpc_timeout: 0s
              cors:
                allow_origin_string_match:
                  - safe_regex:
                      google_re2: {}
                      regex: \*
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router
  - name: business_data_listener
    address:
      socket_address: {
        address: 0.0.0.0,
        port_value: 8991
      }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        # TODO: deprecated option 'envoy.api.v2.listener.Filter.config' change to 'typed_config'
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_business_data_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: business_data_cluster
                  max_grpc_timeout: 0s
              cors:
                allow_origin_string_match:
                  - safe_regex:
                      google_re2: {}
                      regex: \*
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router
  - name: enrollment_listener
    address:
      socket_address: {
        address: 0.0.0.0,
        port_value: 8992
      }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        # TODO: deprecated option 'envoy.api.v2.listener.Filter.config' change to 'typed_config'
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_enrollment_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: enrollment_cluster
                  max_grpc_timeout: 0s
              cors:
                allow_origin_string_match:
                  - safe_regex:
                      google_re2: {}
                      regex: \*
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router

  clusters:
  - name: access_cluster
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: access_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # replace the 'localhost' address with your access host address
                address: localhost
                port_value: 50050

  - name: dictionary_cluster
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: dictionary_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # replace the 'localhost' address with your dictionary host address
                address: localhost
                port_value: 50051

  - name: business_data_cluster
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: business_data_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # replace the 'localhost' address with your business data host address
                address: localhost
                port_value: 50052

  - name: enrollment_cluster
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: business_data_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # replace the 'localhost' address with your enrollment host address
                address: localhost
                port_value: 50047
